{"version":3,"sources":["../src/datasource.js"],"names":["zipObject","keys","values","reducer","acc","key","idx","reduce","Datasource","instanceSettings","$q","backendSrv","templateSrv","doQuery","datasourceRequest","url","encodeURIComponent","query","method","doQueries","Promise","all","queries","map","getVariables","options","toValue","text","x","value","replaceInterval","slice","range","from","format","to","vars","__from","__to","__range","scopedVars","__interval","Object","y","name","id","transformResponse","response","tables","data","results","target","datapoints","date","sum","Date","parse","transformAll","variables","targets","filter","hide","rawSql","replace","length","when","then","columns_names","result","obj","annotation","title","time","timestamp","tags","trim","split","rawQuery","message","reject","console","log","Error","status","catch","err","error"],"mappings":"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","file":"datasource.js","sourcesContent":["function zipObject(keys, values) {\r\n  const reducer = (acc, key, idx) => ({\r\n    ...acc,\r\n    [key]: values[idx],\r\n  });\r\n\r\n  return keys.reduce(reducer, {});\r\n}\r\n\r\nexport default class Datasource {\r\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\r\n    this.name = instanceSettings.name;\r\n    this.id = instanceSettings.id;\r\n\r\n    this.url = instanceSettings.url;\r\n\r\n    this.$q = $q;\r\n    this.backendSrv = backendSrv;\r\n    this.templateSrv = templateSrv;\r\n  }\r\n\r\n  // ---------------------------------------------------------------------------\r\n\r\n  doQuery = query => this.backendSrv.datasourceRequest({\r\n    url: `${this.url}/query_exp?query=${encodeURIComponent(query)}&date_format=js`,\r\n    method: 'GET',\r\n  });\r\n\r\n  doQueries = queries => Promise.all(queries.map(this.doQuery));\r\n\r\n  getVariables = (options) => {\r\n    const toValue = x => ({\r\n      text: x,\r\n      value: x,\r\n    });\r\n\r\n    const replaceInterval = x => (\r\n      x.slice(-1) === 'm'\r\n        ? `${x}in`\r\n        : x\r\n    );\r\n\r\n    const range = {\r\n      from: options.range.from.format('YYYY-MM-DD[T]HH:mm:ss'),\r\n      to: options.range.to.format('YYYY-MM-DD[T]HH:mm:ss'),\r\n    };\r\n\r\n    const vars = {\r\n      __from: range.from,\r\n      __to: range.to,\r\n      __range: `range(${range.from}, ${range.to})`,\r\n    };\r\n\r\n    if (options.scopedVars && options.scopedVars.__interval) {\r\n      const { value } = options.scopedVars.__interval;\r\n      vars.__interval = replaceInterval(value);\r\n    }\r\n\r\n    return {\r\n      ...options.scopedVars,\r\n      ...Object.keys(vars)\r\n        .map(key => ({ [key]: toValue(vars[key]) }))\r\n        .reduce((x, y) => ({ ...y, ...x }), {}),\r\n    };\r\n  };\r\n\r\n  // ---------------------------------------------------------------------------\r\n\r\n  query(options) {\r\n    const transformResponse = (response) => {\r\n      const { tables } = response.data;\r\n      const results = tables[0] ? tables[0].results : [];\r\n\r\n      const target = 'select metric';\r\n      const datapoints = results.map(([date, sum]) => [sum, Date.parse(date)]);\r\n\r\n      return { target, datapoints };\r\n    };\r\n\r\n    const transformAll = (results) => {\r\n      const data = results.map(transformResponse);\r\n      return { data };\r\n    };\r\n\r\n    const variables = this.getVariables(options);\r\n    const queries = options.targets\r\n      .filter(x => (!x.hide && x.rawSql))\r\n      .map(x => this.templateSrv.replace(x.rawSql, variables));\r\n\r\n    if (!queries.length) {\r\n      const data = [];\r\n      return this.$q.when({ data });\r\n    }\r\n\r\n    return this.doQueries(queries).then(transformAll);\r\n  }\r\n\r\n  annotationQuery(options) {\r\n    const transformResponse = (response) => {\r\n      if (!response.data.tables.length) {\r\n        return [];\r\n      }\r\n\r\n      const data = response.data.tables[0];\r\n      const keys = data.columns_names;\r\n\r\n      return data.results.map((result) => {\r\n        const obj = zipObject(keys, result);\r\n\r\n        const { annotation } = options;\r\n        const { title, text } = obj;\r\n\r\n        const time = Date.parse(obj.timestamp);\r\n        const tags = obj.tags\r\n          ? obj.tags.trim().split(/\\s*,\\s*/)\r\n          : [];\r\n\r\n        return { annotation, time, title, text, tags };\r\n      });\r\n    };\r\n\r\n    const rawQuery = options.annotation.query;\r\n\r\n    if (!rawQuery) {\r\n      const message = 'Query missing in annotation definition';\r\n      return this.$q.reject({ message });\r\n    }\r\n\r\n    const variables = this.getVariables(options);\r\n    const query = this.templateSrv.replace(rawQuery, variables);\r\n\r\n    return this.doQuery(query).then(transformResponse);\r\n  }\r\n\r\n  metricFindQuery(query) {\r\n    console.log('metricFindQuery:', query);\r\n    throw new Error('metricFindQuery is not yet implemented.');\r\n  }\r\n\r\n  testDatasource() {\r\n    return this.backendSrv.datasourceRequest({\r\n      url: `${this.url}/global_status`,\r\n      method: 'GET',\r\n    })\r\n      .then(() => {\r\n        const status = 'success';\r\n        const message = 'QuasarDB connection is OK!';\r\n\r\n        return { status, message };\r\n      })\r\n      .catch((err) => {\r\n        const status = 'error';\r\n        const message =\r\n          'Unable to connect to datasource. ' +\r\n          'See console for detailed information.';\r\n\r\n        if (process.env.NODE_ENV !== 'test') {\r\n          // eslint-disable-next-line no-console\r\n          console.error('QDB CONNECTION ERROR:', err);\r\n        }\r\n\r\n        return { status, message };\r\n      });\r\n  }\r\n}\r\n"]}